<?php
// source: %A%

class Template%a% extends Latte\Runtime\Template
{
	public $blocks = [
		'menu' => 'blockMenu',
	];

	public $blockTypes = [
		'menu' => 'xhtml',
	];

	public $contentType = 'xhtml';


	function main()
	{
		extract($this->params);
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ul>
	<li>Escaped: <?php echo LR\Filters::escapeHtmlText($hello) /* line 4 */ ?></li>
	<li>Non-escaped: <?php echo $hello /* line 5 */ ?></li>
	<li>Escaped expression: <?php echo LR\Filters::escapeHtmlText('<' . 'b' . '>hello' . '</b>') /* line 6 */ ?></li>
	<li>Non-escaped expression: <?php echo '<' . 'b' . '>hello' . '</b>' /* line 7 */ ?></li>
	<li>Array access: <?php echo LR\Filters::escapeHtmlText($people[1]) /* line 8 */ ?></li>
	<li>Html: <?php echo LR\Filters::escapeHtmlText($el) /* line 9 */ ?> <?php echo LR\Filters::escapeHtmlText($el2) /* line 9 */ ?></li>
	<li>Translated: <?php echo LR\Filters::escapeHtmlText(($this->filters->translate)($people[1])) ?></li>
	<li>Translated string: <?php echo LR\Filters::escapeHtmlText(($this->filters->translate)('ahoj')) ?></li>
	<li>Non-escaped and translated: <?php echo ($this->filters->translate)($people[1]) ?></li>
	<li>Condition: <?php echo LR\Filters::escapeHtmlText($hello ? 'yes' : null) /* line 13 */ ?> <?php echo LR\Filters::escapeHtmlText($hello ? 'yes' : null) /* line 13 */ ?></li>
	<li>Array: <?php echo LR\Filters::escapeHtmlText(($this->filters->join)($hello ? (['a', 'b', 'c']) : null)) /* line 14 */ ?> <?php
		echo LR\Filters::escapeHtmlText(($this->filters->join)(['a', 'b', $hello ? 'c' : null])) /* line 14 */ ?></li>
</ul>

<input /> <input /> <input />

<input checked /> <input checked="checked" />

{ test} {"test} {'test}

<p val = <?php
		if (true) {
			?>"a"<?php
		}
		else {
			?>"b"<?php
		}
?>> </p>

<p val0 val1 = tmp val2=tmp val3="x"></p> </p>

<p val = <?php echo LR\Filters::escapeHtmlAttrUnquoted($xss) /* line 27 */ ?> val2=<?php echo LR\Filters::escapeHtmlAttrUnquoted($mxss) /* line 27 */ ?>> </p>

<p onclick = <?php echo LR\Filters::escapeHtmlAttrUnquoted($xss) /* line 29 */ ?>> </p>

<p ONCLICK ="<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) /* line 31 */ ?>" <?php echo LR\Filters::escapeHtmlAttrUnquoted($xss) /* line 31 */ ?>> </p>

<p val = /><?php echo LR\Filters::escapeHtmlText($xss) /* line 33 */ ?></p>

<?php echo LR\Filters::escapeHtmlText((string) (bool) (float) (int) (array) 10) /* line 35 */ ?>


<?php
		if ($hello) {
			?>	<?php echo LR\Filters::escapeHtmlText($hello) /* line 38 */ ?>

<?php
		}
		elseif ($any) {
			?>	<?php echo LR\Filters::escapeHtmlText($any) /* line 40 */ ?>

<?php
		}
		else {
?>
	none
<?php
		}
?>


<?php
		$iterations = 0;
		foreach ($iterator = $this->global->its[] = new LR\CachingIterator(array(true)) as $foo) {
			$iterations = 0;
			foreach ($iterator = $this->global->its[] = new LR\CachingIterator($people) as $person) {
				?>	<?php
				if ($iterator->isFirst()) {
					?><ul><?php
				}
?>

	<li id="item-<?php echo LR\Filters::escapeHtmlAttr($iterator->getCounter()) /* line 49 */ ?>" class="<?php
				echo LR\Filters::escapeHtmlAttr($iterator->isOdd() ? 'odd' : 'even') /* line 49 */ ?>"><?php echo LR\Filters::escapeHtmlText($person) /* line 49 */ ?></li>
	<?php
				if ($iterator->isLast()) {
					?></ul><?php
				}
?>

<?php
				$iterations++;
			}
			array_pop($this->global->its);
			$iterator = end($this->global->its);
			$iterations++;
		}
		array_pop($this->global->its);
		$iterator = end($this->global->its);
?>



<STYLE type="text/css">
<!--
#<?php echo LR\Filters::escapeCss($xss) /* line 58 */ ?> {
	background: blue;
}
-->
</style>



<script>
<!--
alert('</div>');

var prop = <?php echo LR\Filters::escapeJs($people) /* line 70 */ ?>;

document.getElementById(<?php echo LR\Filters::escapeJs($xss) /* line 72 */ ?>).style.backgroundColor = 'red';

var html = <?php echo LR\Filters::escapeJs($el) /* line 74 */ ?> || <?php echo LR\Filters::escapeJs($el2) /* line 74 */ ?>;
-->
</script>


<SCRIPT>
/* <![CDATA[ */

var prop2 = <?php echo LR\Filters::escapeJs($people) /* line 82 */ ?>;

/* ]]> */
</script>


<p onclick =
'alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) /* line 89 */ ?>);alert("hello");'
 title='<?php echo LR\Filters::escapeHtmlAttr($xss) /* line 90 */ ?>'
 STYLE =
 "color:<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeCss($xss)) /* line 92 */ ?>;"
 rel="<?php echo LR\Filters::escapeHtmlAttr($xss) /* line 93 */ ?>"
 onblur="alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) /* line 94 */ ?>)"
 alt='<?php echo LR\Filters::escapeHtmlAttr($el) /* line 95 */ ?> <?php echo LR\Filters::escapeHtmlAttr($el2) /* line 95 */ ?>'
 onfocus="alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($el)) /* line 96 */ ?>)"
>click on me <?php echo LR\Filters::escapeHtmlText($xss) /* line 97 */ ?></p>



<?php
		$counter = 0;
		if ($this->getParentName()) return get_defined_vars();
		$this->renderBlock('menu', get_defined_vars());
?>


<?php
		extract(['varx' => 2], EXTR_SKIP);
		echo LR\Filters::escapeHtmlText($varx) /* line 111 */ ?>

<?php
		extract(['varx' => 4], EXTR_SKIP);
		echo LR\Filters::escapeHtmlText($varx) /* line 112 */ ?>


<?php
		$varx = 8;
		echo LR\Filters::escapeHtmlText($varx) /* line 114 */ ?>

<?php
		$varx = 9;
		echo LR\Filters::escapeHtmlText($varx) /* line 115 */ ?>


<?php
		$now = new DateTime;
		$foo = $now->format('u');
		extract(['foo' => $now->format('u')], EXTR_SKIP) ?>



</ul>


<?php
		echo 'test';
?>


{ }

<?php ob_start(function () {}) ?>true<?php
		if (true) echo ob_get_clean();
		else ob_end_clean();
?>

<?php ob_start(function () {}) ?>false<?php
		if (false) echo ob_get_clean();
		else ob_end_clean();
?>

<?php ob_start(function () {}) ?>true<?php ob_start(function () {}) ?>false<?php
		if (true) {
			ob_end_clean();
			echo ob_get_clean();
		}
		else {
			$this->global->else = ob_get_clean();
			ob_end_clean();
			echo $this->global->else;
		}
?>



<?php
		$this->global->switch[] = (2);
		if (false) {
		}
		elseif (end($this->global->switch) === ('x')) {
?>x
<?php
		}
		elseif (end($this->global->switch) === (2)) {
?>y
<?php
		}
		else {
?>z
<?php
		}
		array_pop($this->global->switch) ?>

<?php echo ($this->filters->breaklines)("\n") /* line 145 */ ?>



<button></button>

<button></button> xx
<?php
		return get_defined_vars();
	}


	function prepare()
	{
		extract($this->params);
		if (!$this->getReferringTemplate() || $this->getReferenceType() === "extends") {
			if (isset($this->params['person'])) trigger_error('Variable $person overwritten in foreach on line 47');
			if (isset($this->params['foo'])) trigger_error('Variable $foo overwritten in foreach on line 46');
			if (isset($this->params['item'])) trigger_error('Variable $item overwritten in foreach on line 104');
		}

	}


	function blockMenu($_args)
	{
		extract($_args);
?>
<ul>
<?php
		$iterations = 0;
		foreach ($iterator = $this->global->its[] = new LR\CachingIterator($menu) as $item) {
			?>	<li><?php echo LR\Filters::escapeHtmlText($counter++) /* line 105 */ ?> <?php
			if (is_array($item)) {
				?> <?php
				$this->renderBlock('menu', ['menu' => $item] + get_defined_vars(), 'xhtml');
				?> <?php
			}
			else {
				echo LR\Filters::escapeHtmlText($item) /* line 105 */;
			}
?></li>
<?php
			$iterations++;
		}
		array_pop($this->global->its);
		$iterator = end($this->global->its);
?>
</ul>
<?php
	}

}
