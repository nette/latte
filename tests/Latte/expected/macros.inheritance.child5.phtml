<?php
// source: %A%

class Template%a% extends Latte\Template
{

	function render()
	{
%A%
// prolog Latte\Macros\BlockMacros
$_b->blocks['content'][] = [$this, 'block_content_%h%'];

// template extending

$_l->extends = $ext; $_g->extended = TRUE;

if ($_l->extends) { ob_start(function () {});}

// main template ?>

<?php if ($_l->extends) { ob_end_clean(); return $template->renderChildTemplate($_l->extends, get_defined_vars()); }
call_user_func(reset($_b->blocks['content']), $_b, get_defined_vars()) ;
	}


	function block_content_%h%($_b, $_args)
	{
		unset($_args["this"]); foreach ($_args as $__k => $__v) $$__k = $__v
?>	Content
<?php
	}

}
