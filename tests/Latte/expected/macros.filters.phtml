<?php
// source: %A%

class Template%a% extends Latte\Template
{

	function render()
	{
%A%?>
<ul>
	<li>lower: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->lower, $hello)) ?></li>
	<li>upper: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->upper, $hello)) ?></li>
	<li>lower & capitalize: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->capitalize, call_user_func($this->filters->lower, $hello))) ?></li>
	<li>nl2br: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->nl2br, $hello)) ?></li>
	<li>truncate: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->lower, call_user_func($this->filters->truncate, $hello, "10 "))) ?></li>
	<li>date: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->date, $date, '%d.%m.%Y %H:%M:%S')) ?></li>
	<li>translated: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->truncate, call_user_func($this->filters->translate, $hello), 3)) ?></li>
	<li>Translated HTML: <?php ob_start(function () {}) ?>ahoj<?php echo LFilters::escapeHtmlText(call_user_func($this->filters->translate, ob_get_clean())) ?></li>
	<li>Translated HTML: <?php ob_start(function () {}) ?>ahoj<?php echo LFilters::escapeHtmlText(call_user_func($this->filters->translate, ob_get_clean())) ?></li>
	<li>Translated HTML: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->translate, 'ahoj|ahojahojahojahoj')) ?></li>
	<li>spaces: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello , '' , "" , "$hello" )) ?></li>
	<li>dynamic: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->dynamic, $hello)) ?>
 <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->dynamic2, $hello)) ?></li>
</ul>

<ul>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->h2, call_user_func($this->filters->h1, $hello))) ?></li>
	<li><?php echo call_user_func($this->filters->h2, call_user_func($this->filters->h1, $hello)) ?></li>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->h1, call_user_func($this->filters->h2, $hello))) ?></li>
	<li><?php echo call_user_func($this->filters->h1, call_user_func($this->filters->h2, $hello)) ?></li>
</ul>

<ul>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello*0, 0, 0.0, "0")) ?></li>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello*1, 1, "1")) ?></li>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello, true, null, false)) ?></li>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello, TRUE, NULL, FALSE)) ?></li>
	<li><?php echo LFilters::escapeHtmlText(call_user_func($this->filters->types, $hello, '', "", "$hello")) ?></li>
</ul>



<?php ob_start(function () {}) ?>  <a   href="#"
> test</a

>
AÅ A

<script>
// comment
alert();
</script>
<?php echo call_user_func($this->filters->strip, ob_get_clean()) ?>




<?php ob_start(function () {}) ?>
<ul>
	<li>lower: <?php echo LFilters::escapeHtmlText(call_user_func($this->filters->lower, $hello)) ?></li>
</ul>
<?php $capture = ob_get_clean() ?>

<p>
Captured: <?php echo LFilters::escapeHtmlText($capture) ?>

</p>


<?php ob_start(function () {}) ?>
Hello
<?php $capture = call_user_func($this->filters->upper, ob_get_clean()) ?>

<p>
Captured with modifier: <?php echo LFilters::escapeHtmlText($capture) ?>

</p>



<p>
Nested blocks: <?php ob_start(function () {}) ?> Outer   <?php ob_start(function () {}) ?>
 Inner Block <?php echo call_user_func($this->filters->upper, ob_get_clean()) ?>
  Block <?php echo call_user_func($this->filters->truncate, ob_get_clean(), 20) ?>

</p>
<?php
	}

}
