<?php
// source: %a%

// prolog Latte\Macros\CoreMacros
list($_b, $_g, $_l) = $template->initialize('%[a-z0-9]+%', 'html')
;
// prolog Latte\Macros\BlockMacros
//
// block menu
//
if (!function_exists($_b->blocks['menu'][] = '_%[a-z0-9]+%_menu')) { function _%[a-z0-9]+%_menu($_b, $_args) { foreach ($_args as $__k => $__v) $$__k = $__v
?><ul>
<?php $iterations = 0; foreach ($iterator = $_l->its[] = new Latte\Runtime\CachingIterator($menu) as $item) { ?>
	<li><?php echo Latte\Runtime\Filters::escapeHtml($counter++, ENT_NOQUOTES) ?> <?php if (is_array($item)) { ?>
 <?php call_user_func(reset($_b->blocks['menu']), $_b, array('menu' => $item) + get_defined_vars()) ?>
 <?php } else { echo Latte\Runtime\Filters::escapeHtml($item, ENT_NOQUOTES) ;} ?></li>
<?php $iterations++; } array_pop($_l->its); $iterator = end($_l->its) ?>
</ul>
<?php
}}

//
// block bl
//
if (!function_exists($_b->blocks['bl'][] = '_%[a-z0-9]+%_bl')) { function _%[a-z0-9]+%_bl($_b, $_args) { foreach ($_args as $__k => $__v) $$__k = $__v
?><ul title="block + if + foreach">
<?php $iterations = 0; foreach ($people as $person) { if (strlen($person)===4) { ?>
	<li><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ?></li>
<?php } $iterations++; } ?>
</ul>
<?php
}}

//
// end of blocks
//

// template extending

$_l->extends = empty($template->_extended) && isset($_control) && $_control instanceof Nette\Application\UI\Presenter ? $_control->findLayoutTemplateFile() : NULL; $template->_extended = $_extended = TRUE;

if ($_l->extends) { ob_start();}

//
// main template
//
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ul>
	<li>Escaped: <?php echo Latte\Runtime\Filters::escapeHtml($hello, ENT_NOQUOTES) ?></li>
	<li>Non-escaped: <?php echo $hello ?></li>
	<li>Escaped expression: <?php echo Latte\Runtime\Filters::escapeHtml('<' . 'b' . '>hello' . '</b>', ENT_NOQUOTES) ?></li>
	<li>Non-escaped expression: <?php echo '<' . 'b' . '>hello' . '</b>' ?></li>
	<li>Array access: <?php echo Latte\Runtime\Filters::escapeHtml($people[1], ENT_NOQUOTES) ?></li>
	<li>Html: <?php echo Latte\Runtime\Filters::escapeHtml($el, ENT_NOQUOTES) ?></li>
	<li>Translated: <?php echo Latte\Runtime\Filters::escapeHtml($template->translate($people[1]), ENT_NOQUOTES) ?></li>
	<li>Translated string: <?php echo Latte\Runtime\Filters::escapeHtml($template->translate('ahoj'), ENT_NOQUOTES) ?></li>
	<li>Non-escaped and translated: <?php echo $template->translate($people[1]) ?></li>
	<li>Condition: <?php echo Latte\Runtime\Filters::escapeHtml($hello ? 'yes' : NULL, ENT_NOQUOTES) ?>
 <?php echo Latte\Runtime\Filters::escapeHtml($hello ? 'yes' : NULL, ENT_NOQUOTES) ?></li>
	<li>Array: <?php echo Latte\Runtime\Filters::escapeHtml($template->join($hello ? array('a', 'b', 'c') : NULL), ENT_NOQUOTES) ?>
 <?php echo Latte\Runtime\Filters::escapeHtml($template->join(array('a', 'b', $hello ? 'c' : NULL)), ENT_NOQUOTES) ?></li>
</ul>

<input> <input> <input>

<input checked> <input checked="checked">

{ test} {"test} {'test}

<p<?php echo Latte\Runtime\Filters::htmlAttributes(array('title' => $hello, 'lang' => isset($lang) ? $lang : NULL)) ?>> </p>

<p val = <?php if (true) { ?>"a"<?php } else { ?>"b"<?php } ?>> </p>

<p val0 val1 = tmp val2=tmp val3="x"></p> </p>

<p val = <?php echo '"' . Latte\Runtime\Filters::escapeHtml($xss, ENT_COMPAT) . '"' ?>
 val2=<?php echo '"' . Latte\Runtime\Filters::escapeHtml($mxss, ENT_COMPAT) . '"' ?>> </p>

<p onclick = <?php echo '"' . Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeJs($xss), ENT_COMPAT) . '"' ?>> </p>

<p ONCLICK ="<?php echo Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeJs($xss), ENT_COMPAT) ?>
" <?php echo '"' . Latte\Runtime\Filters::escapeHtml($xss, ENT_COMPAT) . '"' ?>> </p>

<p val =></p><?php echo Latte\Runtime\Filters::escapeHtml($xss, ENT_NOQUOTES) ?></p>

<?php echo Latte\Runtime\Filters::escapeHtml((string) (bool) (float) (int) (array) 10, ENT_NOQUOTES) ?>


<?php if ($hello) { ?>
	<?php echo Latte\Runtime\Filters::escapeHtml($hello, ENT_NOQUOTES) ?>

<?php } elseif ($any) { ?>
	<?php echo Latte\Runtime\Filters::escapeHtml($any, ENT_NOQUOTES) ?>

<?php } else { ?>
	none
<?php } ?>


<?php $iterations = 0; foreach ($iterator = $_l->its[] = new Latte\Runtime\CachingIterator(array(TRUE)) as $foo) { $iterations = 0; foreach ($iterator = $_l->its[] = new Latte\Runtime\CachingIterator($people) as $person) { ?>
	<?php if ($iterator->isFirst()) { ?><ul><?php } ?>

	<li id="item-<?php echo Latte\Runtime\Filters::escapeHtml($iterator->getCounter(), ENT_COMPAT) ?>
" class="<?php echo Latte\Runtime\Filters::escapeHtml($iterator->isOdd() ? 'odd' : 'even', ENT_COMPAT) ?>
"><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ?></li>
	<?php if ($iterator->isLast()) { ?></ul><?php } ?>

<?php $iterations++; } array_pop($_l->its); $iterator = end($_l->its) ;$iterations++; } array_pop($_l->its); $iterator = end($_l->its) ?>



<STYLE type="text/css">
<!--
#<?php echo Latte\Runtime\Filters::escapeCss($xss) ?> {
	background: blue;
}
-->
</style>



<script>
<!--
alert('</div>');

var prop = <?php echo Latte\Runtime\Filters::escapeJs($people) ?>;

document.getElementById(<?php echo Latte\Runtime\Filters::escapeJs($xss) ?>).style.backgroundColor = 'red';

var html = <?php echo Latte\Runtime\Filters::escapeJs($el) ?>;
-->
</script>


<SCRIPT>
/* <![CDATA[ */

var prop2 = <?php echo Latte\Runtime\Filters::escapeJs($people) ?>;

/* ]]> */
</script>


<p onclick =
'alert(<?php echo Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeJs($xss), ENT_QUOTES) ?>);alert("hello");'
 title='<?php echo Latte\Runtime\Filters::escapeHtml($xss, ENT_QUOTES) ?>'
 STYLE =
 "color:<?php echo Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeCss($xss), ENT_COMPAT) ?>;"
 rel="<?php echo Latte\Runtime\Filters::escapeHtml($xss, ENT_COMPAT) ?>"
 onblur="alert(<?php echo Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeJs($xss), ENT_COMPAT) ?>)"
 alt='<?php echo Latte\Runtime\Filters::escapeHtml($el, ENT_QUOTES) ?>'
 onfocus="alert(<?php echo Latte\Runtime\Filters::escapeHtml(Latte\Runtime\Filters::escapeJs($el), ENT_COMPAT) ?>)"
>click on me <?php echo Latte\Runtime\Filters::escapeHtml($xss, ENT_NOQUOTES) ?></p>



<?php $counter = 0 ;if ($_l->extends) { ob_end_clean(); return $template->renderChildTemplate($_l->extends, get_defined_vars()); }
call_user_func(reset($_b->blocks['menu']), $_b, get_defined_vars())  ?>


<?php extract(array('varx' => 2), EXTR_SKIP) ;echo Latte\Runtime\Filters::escapeHtml($varx, ENT_NOQUOTES) ?>

<?php extract(array('varx' => 4), EXTR_SKIP) ;echo Latte\Runtime\Filters::escapeHtml($varx, ENT_NOQUOTES) ?>


<?php $varx = 8 ;echo Latte\Runtime\Filters::escapeHtml($varx, ENT_NOQUOTES) ?>

<?php $varx = 9 ;echo Latte\Runtime\Filters::escapeHtml($varx, ENT_NOQUOTES) ?>


<?php $now = new DateTime ;$foo = $now->format('u') ;extract(array('foo' => $now->format('u')), EXTR_SKIP) ?>



</ul>


<ul title="foreach">
<?php $iterations = 0; foreach ($people as $person) { ?>	<li><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ?></li>
<?php $iterations++; } ?>
</ul>

<ul title="for">
<?php for ($i=0;$i<3;$i++) { ?>	<li><?php echo Latte\Runtime\Filters::escapeHtml($i, ENT_NOQUOTES) ?></li>
<?php } ?>
</ul>

<ul title="white">
<?php while (--$i>0) { ?>	<li><?php echo Latte\Runtime\Filters::escapeHtml($i, ENT_NOQUOTES) ?></li>
<?php } ?>
</ul>

<?php if (true) { ?><p>
	<div><p>true</div>
</p>
<?php } ?>

<?php if (true) { ?><p>
	<div><p>true</p></div>
</p>
<?php } ?>

<?php if (false) { ?><p>
	<div><p>false</div>
</p>
<?php } ?>

<?php if (false) { ?><p>
	<div><p>false</p></div>
</p>
<?php } ?>

<?php if (strlen('{$xss}') > 5) { ?><p>noLatte</p>
<?php } ?>

<ul title="if + foreach">
<?php $iterations = 0; foreach ($people as $person) { if (strlen($person)===4) { ?>
	<li><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ?></li>
<?php } $iterations++; } ?>
</ul>

<ul title="if + inner-if + inner-foreach">
<?php if (empty($iterator)) { ?>	<li><?php $iterations = 0; foreach ($people as $person) { if (strlen($person)===4) { echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ;} $iterations++; } ?></li>
<?php } ?>
</ul>

<ul title="inner-if + inner-foreach">
<?php $iterations = 0; foreach ($people as $person) { if (strlen($person)===4) { ?>
	<li><?php echo Latte\Runtime\Filters::escapeHtml($template->lower($person), ENT_NOQUOTES) ?></li>
<?php } $iterations++; } ?></ul>

<?php call_user_func(reset($_b->blocks['bl']), $_b, get_defined_vars())  ?>

<?php if ($_l->ifs[] = (true)) { ?><b><?php } ?>
bold<?php if (array_pop($_l->ifs)) { ?></b><?php } ?>
 <?php if ($_l->ifs[] = (false)) { ?><b><?php } ?>
normal<?php if (array_pop($_l->ifs)) { ?></b>
<?php } ?>

<?php if ($_l->ifs[] = (true)) { ?><b<?php if ($_l->tmp = array_filter(array('first'))) echo ' class="' . Latte\Runtime\Filters::escapeHtml(implode(" ", array_unique($_l->tmp)), ENT_COMPAT) . '"' ?>
><?php } ?>
bold<?php if (array_pop($_l->ifs)) { ?></b>
<?php } ?>

<?php echo 'test' ?>


{ }

<p<?php if ($_l->tmp = array_filter(array('foo', (false ? 'first' : NULL), 'odd', ($hello ? 'foo' : 'bar')))) echo ' class="' . Latte\Runtime\Filters::escapeHtml(implode(" ", array_unique($_l->tmp)), ENT_COMPAT) . '"' ?>>n:class</p>

<p<?php if ($_l->tmp = array_filter(array(false ? 'first' : NULL))) echo ' class="' . Latte\Runtime\Filters::escapeHtml(implode(" ", array_unique($_l->tmp)), ENT_COMPAT) . '"' ?>>n:class empty</p>

<meta>
<?php if (true) { ?><meta>
<?php } if ($_l->ifs[] = (true)) { ?><meta>
<?php } if (array_pop($_l->ifs)) { } ?>
<meta>
<?php if (true) { } ?><meta>

<?php ob_start() ?>TRUE<?php if (TRUE) ob_end_flush(); else ob_end_clean() ?>

<?php ob_start() ?>FALSE<?php if (FALSE) ob_end_flush(); else ob_end_clean() ?>

<?php ob_start() ?>TRUE<?php ob_start() ?>FALSE<?php if (TRUE) { ob_end_clean(); ob_end_flush(); } else { $_else = ob_get_contents(); ob_end_clean(); ob_end_clean(); echo $_else; } ?>


<?php $iterations = 0; foreach ($iterator = $_l->its[] = new Latte\Runtime\CachingIterator(array(1,2,3)) as $foo) { ?>
	<b<?php if ($_l->tmp = array_filter(array($iterator->even ? 'even' : NULL))) echo ' class="' . Latte\Runtime\Filters::escapeHtml(implode(" ", array_unique($_l->tmp)), ENT_COMPAT) . '"' ?>>item</b>
<?php $iterations++; } array_pop($_l->its); $iterator = end($_l->its) ?>

<?php $iterations = 0; foreach ($iterator = $_l->its[] = new Latte\Runtime\CachingIterator(array(1, 2, 3)) as $foo) { ?>
<p<?php if ($_l->tmp = array_filter(array($iterator->even ? 'even' : NULL))) echo ' class="' . Latte\Runtime\Filters::escapeHtml(implode(" ", array_unique($_l->tmp)), ENT_COMPAT) . '"' ?>
><?php echo Latte\Runtime\Filters::escapeHtml($foo, ENT_NOQUOTES) ?></p>
<?php $iterations++; } array_pop($_l->its); $iterator = end($_l->its) ?>

<?php $iterations = 0; foreach (array(0) as $foo) { if (1) { $iterations = 0; foreach (array(1) as $foo) { if ($_l->ifs[] = (0)) { ?>
<span><?php } $iterations++; } $iterations = 0; foreach (array(2) as $foo) { if (2) { ?>
Hello<?php } $iterations++; } $iterations = 0; foreach (array(1) as $foo) { if (array_pop($_l->ifs)) { ?></span>
<?php } $iterations++; } } $iterations++; } ?>


<ul title="foreach break">
<?php $iterations = 0; foreach ($people as $person) { ?>	<li><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ;if (TRUE) { echo "</li>\n"; break; } ?></li>
<?php $iterations++; } ?>
</ul>

<ul title="foreach continue">
<?php $iterations = 0; foreach ($people as $person) { ?>	<li><?php echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ;if (TRUE) { echo "</li>\n"; continue; } ?></li>
<?php $iterations++; } ?>
</ul>


<ul title="inner foreach break">
	<li><?php $iterations = 0; foreach ($people as $person) { echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ;if (TRUE) break ;$iterations++; } ?></li>
</ul>

<ul title="inner foreach continue">
	<li><?php $iterations = 0; foreach ($people as $person) { echo Latte\Runtime\Filters::escapeHtml($person, ENT_NOQUOTES) ;if (TRUE) continue ;$iterations++; } ?></li>
</ul>

<?php $_l->switch[] = (2); if (FALSE) { } elseif (end($_l->switch) === ('x')) { ?>x
<?php } elseif (end($_l->switch) === (2)) { ?>y
<?php } else { ?>z
<?php } array_pop($_l->switch) ?>

<?php echo $template->nl2br("\n") ?>
