<?php
%A%

class Template%a% extends Latte\Runtime\Template
{
	public $blocks = [
		'_' => 'block_b14a7',
		'_outer' => 'blockOuter',
		'_inner' => 'blockInner',
		'_title' => 'blockTitle',
		'_title2' => 'blockTitle2',
	];

	public $blockTypes = [
		'_' => 'html',
		'_outer' => 'html',
		'_inner' => 'html',
		'_title' => 'html',
		'_title2' => 'html',
	];


	function main()
	{
%A%
		?><div id="<?php echo htmlSpecialChars($this->global->snippetDriver->getHtmlId('')) ?>"><?php $this->renderBlock('_', $this->params) ?></div>


<div id="<?php echo htmlSpecialChars($this->global->snippetDriver->getHtmlId('outer')) ?>"><?php $this->renderBlock('_outer', $this->params) ?></div>


	@<?php
		if (true) {
			?> Hello World @<?php
		}
?>


	<div id="<?php echo htmlSpecialChars($this->global->snippetDriver->getHtmlId('title')) ?>"><?php $this->renderBlock('_title', $this->params) ?></div>
	<div id="<?php echo htmlSpecialChars($this->global->snippetDriver->getHtmlId('title2')) ?>"><?php $this->renderBlock('_title2', $this->params) ?></div><?php
		return get_defined_vars();
	}


	function block_%h%($_args)
	{
		extract($_args);
		$this->global->snippetDriver->enter("", "static");
?>

<?php
		$this->global->snippetDriver->leave();

	}


	function blockOuter($_args)
	{
		extract($_args);
		$this->global->snippetDriver->enter("outer", "static");
?>
	Outer
		<div id="<?php echo htmlSpecialChars($this->global->snippetDriver->getHtmlId('inner')) ?>"><?php $this->renderBlock('_inner', $this->params) ?></div>	/Outer
<?php
		$this->global->snippetDriver->leave();

	}


	function blockInner($_args)
	{
		extract($_args);
		$this->global->snippetDriver->enter("inner", "static");
		?>Inner<?php
		$this->global->snippetDriver->leave();

	}


	function blockTitle($_args)
	{
		extract($_args);
		$this->global->snippetDriver->enter("title", "static");
		?>Title 1<?php
		$this->global->snippetDriver->leave();

	}


	function blockTitle2($_args)
	{
		extract($_args);
		$this->global->snippetDriver->enter("title2", "static");
		?>Title 2<?php
		$this->global->snippetDriver->leave();

	}

}
